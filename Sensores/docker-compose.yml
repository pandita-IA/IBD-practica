services:

  temperature-humidity-sensors:

    container_name: temperature-humidity-sensors
    build:
      context: ./
      dockerfile: Dockerfile
    # command: ["./wait-for-it.sh", "api:5000", "--", "python", "-u", "app.py"]
    environment:
      API_URL: "http://api:5000/sensor-data"
    volumes:
      - "./Temperature-Humidity Sensors:/app"
      - "./wait-for-it.sh:/app/wait-for-it.sh"
    command: ["./wait-for-it.sh", "api:5000", "--", "python", "-u", "app.py"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://temperature-humidity-sensors:5000/health"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

    networks:
      - sensores

  occupancy-sensors:
    container_name: occupancy-sensors
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      API_URL: "http://api:5000/sensor-data"

    # command: ["./wait-for-it.sh", "api:5000", "--", "python", "-u", "app.py"]

    volumes:
      - "./Occupancy Sensors:/app"
      - "./wait-for-it.sh:/app/wait-for-it.sh"
    networks:
      - sensores
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://occupancy-sensors:5000/health"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    command: ["./wait-for-it.sh", "api:5000", "--", "python", "-u", "app.py"]


  power-consumption-meters:
    container_name: power-consumption-meters
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      API_URL: "http://api:5000/sensor-data"


    # command: "./wait-for-it.sh", "api:5000", "--", "python", "-u", "app.py"]

    volumes:
      - "./Power Consumption Meters:/app"
      - "./wait-for-it.sh:/app/wait-for-it.sh"

    networks:
      - sensores
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://power-consumption-meters:5000/health"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    command: ["./wait-for-it.sh", "api:5000", "--", "python", "-u", "app.py"]

  security-cameras:
    container_name: security-cameras
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      API_URL: "http://api:5000/sensor-data"
    # command: ["./wait-for-it.sh", "api:5000", "--", "python", "-u", "app.py"]

    volumes:
      - "./Security Cameras:/app"
      - "./wait-for-it.sh:/app/wait-for-it.sh"

    networks:
      - sensores
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://security-cameras:5000/health"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    command: ["./wait-for-it.sh", "api:5000", "--", "python", "-u", "app.py"]

networks:
  sensores:
    driver: bridge
    external: true  