services:

  temperature-humidity-sensors:

    container_name: temperature-humidity-sensors
    image: pandira/practica1-sensores:v1.0.0   
    # command: ["./wait-for-it.sh", "api:5000", "--", "python", "-u", "app.py"]
    environment:
      API_URL: "http://api:5000/sensor-data"
    volumes:
      - "./Temperature-Humidity Sensors:/app"
      - "./wait-for-it.sh:/app/wait-for-it.sh"
    
    command: ["./wait-for-it.sh", "api:5000", "--", "python", "-u", "app.py"]

    networks:
      - sensores

  occupancy-sensors:
    container_name: occupancy-sensors
    image: pandira/practica1-sensores:v1.0.0   
    environment:
      API_URL: "http://api:5000/sensor-data"

    # command: ["./wait-for-it.sh", "api:5000", "--", "python", "-u", "app.py"]

    volumes:
      - "./Occupancy Sensors:/app"
      - "./wait-for-it.sh:/app/wait-for-it.sh"
    command: ["./wait-for-it.sh", "api:5000", "--", "python", "-u", "app.py"]
    networks:
      - sensores


  power-consumption-meters:
    container_name: power-consumption-meters
    image: pandira/practica1-sensores:v1.0.0
    environment:
      API_URL: "http://api:5000/sensor-data"

    # command: ["./wait-for-it.sh", "api:5000", "--", "python", "-u", "app.py"]

    volumes:
      - "./Power Consumption Meters:/app"
      - "./wait-for-it.sh:/app/wait-for-it.sh"
    command: ["./wait-for-it.sh", "api:5000", "--", "python", "-u", "app.py"]

    networks:
      - sensores

  security-cameras:
    container_name: security-cameras
    image: pandira/practica1-sensores:v1.0.0

    environment:
      API_URL: "http://api:5000/sensor-data"

    # command: ["./wait-for-it.sh", "api:5000", "--", "python", "-u", "app.py"]

    volumes:
      - "./Security Cameras:/app"
      - "./wait-for-it.sh:/app/wait-for-it.sh"
    command: ["./wait-for-it.sh", "api:5000", "--", "python", "-u", "app.py"]

    networks:
      - sensores

networks:
  sensores:
    driver: bridge
    external: true  