services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
      
    networks:
      - consumer
  
  publisher:
    image: bigdatainf/python:latest
    volumes:
      - ./publisher:/app
    working_dir: /app
    command: python -u publish_prueba.py
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
    depends_on:
      - rabbitmq
    networks:
      - consumer


  consumer_occupancy:
    image: bigdatainf/python:latest
    volumes:
      - ./consumer:/app
      - ./data:/data
    working_dir: /app
    command: python -u occupancy_consumer.py
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
    depends_on:
      - rabbitmq
    networks:
      - consumer


  consumer_power:
    image: bigdatainf/python:latest
    volumes:
      - ./consumer:/app
      - ./datnetworkNamea:/data
    working_dir: /app
    command: python -u power_consumer.py
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
    depends_on:
      - rabbitmq
    networks:
      - consumer


  consumer_security:
    image: bigdatainf/python:latest
    volumes:
      - ./consumer:/app
      - ./data:/data
    working_dir: /app
    command: python -u security_consumer.py
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
    depends_on:
      - rabbitmq
    networks:
      - consumer


  consumer_temperature:
    image: bigdatainf/python:latest
    volumes:
      - ./consumer:/app
      - ./data:/data
    working_dir: /app
    command: python -u temperature_consumer.py
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
    depends_on:
      - rabbitmq
    networks:
      - consumer


  api-containers:
    image: bigdatainf/python:latest
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./api:/app
      - ./data:/data  # CSVs
    working_dir: /app
    command: python -u api.py
    environment:
      - PATH_FILE_OCUPACION=/data/occupancy.csv
      - PATH_FILE_POWER=/data/power.csv
      - PATH_FILE_SECURITY=/data/security.csv
      - PATH_FILE_TEMPERATURE=/data/temperature.csv

    depends_on:
      - rabbitmq
    networks:
      - consumer
    ports:
      - "5001:5000"


networks:
  consumer:
    driver: bridge
    external: true